services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus

  snmp_exporter:
    image: prom/snmp-exporter:latest
    container_name: snmp_exporter
    restart: unless-stopped
    volumes:
      - ./snmp_exporter/snmp.yml:/etc/snmp_exporter/snmp.yml
    command:
      - '--config.file=/etc/snmp_exporter/snmp.yml'
    ports:
      - "9116:9116"
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"    
    networks:
      - monitoring

  discord-bot:
    build:
      context: ./discord_alert_bot
    ports:
      - "8000:8000"
    networks:
      - monitoring

  snmp_parser:
    build:
      context: ./snmp_parser
    container_name: snmp_parser
    restart: unless-stopped
    volumes:
      - ./snmp_parser:/app  # Mount thư mục chứa mã Python + log
    networks:
      - monitoring
    depends_on:
      - prometheus
      
  train_ai:
    build:
      context: ./train_ai
    container_name: train_ai
    restart: "no"
    volumes:
      - ./train_ai:/app  # Mount mã + data.csv
      - ./snmp_parser:/app/snmp_parser
    networks:
      - monitoring
    depends_on:
      - snmp_parser

  ai_detection:
    build:
      context: ./detect
    container_name: ai_detection
    volumes:
      - ./snmp_parser:/app/snmp_parser       # Mount dữ liệu đầu vào
      - ./train_ai:/app/train_ai  	     # Mount model đã huấn luyện
      - ./outputs:/app/outputs               # Lưu kết quả tại đây
    working_dir: /app
    networks:
      - monitoring
    command: python detect.py

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:            
    driver: local
